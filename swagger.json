{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8081/api",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Companies",
      "description": "APIs para gerenciamento de empresas"
    },
    {
      "name": "Roles",
      "description": "APIs para gerenciamento de funções"
    },
    {
      "name": "Clock ins",
      "description": "APIs para gerenciamento de movimentações"
    },
    {
      "name": "Contracts",
      "description": "Endpoints para gerenciamento de contratos"
    },
    {
      "name": "Employees",
      "description": "APIs para gerenciamento de funcionários"
    }
  ],
  "paths": {
    "/employee/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para buscar funcionário pelo ID",
        "description": "Este endpoint faz uma filtragem e lista os funcionários atráves do ID",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do funcionário",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Funcionário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Funcionário não encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para atualizar funcionario existente",
        "description": "Este endpoint atualiza os dados de um funcionário cadastrado através de seu ID",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funcionário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para deletar funcionário",
        "description": "Este endpoint remove um funcionário cadastrado do sistema com base no seu ID. A operação é irreversível e o funcionário será permanentemente excluído.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do funcionário a ser deletado",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Funcionário deletado com sucesso"
          },
          "404": {
            "description": "Funcionário não encontrado"
          }
        }
      }
    },
    "/contracts/{contractId}": {
      "put": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para atualizar um contrato",
        "operationId": "updateContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para excluir um contrato",
        "operationId": "deleteContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/contracts/{contractId}/inactivate": {
      "put": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para inativar um contrato",
        "operationId": "inactivateContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/company/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para buscar empresa pelo ID",
        "operationId": "getCompanyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para atualizar empresa existente",
        "description": "",
        "operationId": "updateCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para deletar empresa (soft delete)",
        "operationId": "deleteCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/clock_in/{id}": {
      "get": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para buscar uma movimentação pelo ID",
        "description": "Este endpoint retorna os dados de uma movimentação específica com base no ID informado.",
        "operationId": "getClockInById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da movimentação a ser buscada",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movimentação retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movimentação não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para atualizar uma movimentação",
        "description": "Este endpoint atualiza os dados de uma movimentação já registrada com base no ID informado. Os dados atualizáveis incluem data e hora de entrada e saída.",
        "operationId": "updateClockIn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da movimentação a ser atualizada",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClockInRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Movimentação atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movimentação não encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para excluir uma movimentação",
        "description": "Este endpoint remove uma movimentação registrada do sistema com base no ID informado. A exclusão é irreversível.",
        "operationId": "deleteClockIn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da movimentação a ser deletada",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movimentação deletada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movimentação não encontrada"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Endpoint para buscar todas as funções",
        "description": "Este endpoint retorna uma lista com todas as funções (cargos) cadastradas no sistema.",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Lista de funções retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Endpoint para criar função",
        "description": "Este endpoint cria uma nova função (cargo) no sistema com base nos dados fornecidos. Os dados incluem o nome da função e outras informações relevantes.",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Função criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos para criação"
          }
        }
      }
    },
    "/photos/upload": {
      "post": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Endpoint para fazer upload da foto de um funcionário",
        "operationId": "uploadPhoto",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Erro ao salvar a foto",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Foto salva com sucesso",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para listar funcionários com ou sem paginação",
        "description": "Este endpoint retorna uma lista de funcionários. Se os parâmetros `page` e `size` forem fornecidos, a resposta será paginada. Também é possível realizar um filtro opcional pelo nome do funcionário através do parâmetro `name`, que aceita buscas parciais e sem distinção entre maiúsculas e minúsculas. Caso não seja usada paginação, todos os funcionários serão retornados em uma lista simples.",
        "operationId": "getEmployees",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Número da página (inicia em 0)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Quantidade de itens por página",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filtro parcial por nome do funcionário (case-insensitive)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de funcionários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/EmployeeResponseDTO" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/EmployeeDTO" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para criar funcionário",
        "description": "Este endpoint cria um novo registro de funcionário através dos dados fornecidos. Os campos esperados no corpo da requisição incluem nome completo, número de registro (matrícula), data de nascimento, gênero e tipo sanguíneo.",
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Funcionário criado com sucesso",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para criar um novo contrato",
        "operationId": "createContract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/company": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Buscar empresas com filtros e paginação",
        "operationId": "getCompanies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para criar nova empresa",
        "operationId": "createCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/clock_in": {
      "post": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para criar uma nova movimentação",
        "description": "Este endpoint registra uma nova movimentação de entrada e saída de um funcionário, com base nos dados fornecidos como data e hora de entrada e saída.",
        "operationId": "createClockIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClockInRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Movimentação criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos ou campos obrigatórios ausentes"
          }
        }
      }
    },
    "/photos/file/employee/{employeeId}": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Endpoint para obter a foto do funcionário como recurso (uso em aplicações web)",
        "operationId": "servePhotoAsResource",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Imagem retornada como Resource",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Erro ao carregar o arquivo",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/photos/bytes/employee/{employeeId}": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Endpoint para obter a foto do funcionário em formato de bytes (uso em mobile e APIs)",
        "operationId": "servePhotoBytes",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "200": {
            "description": "Imagem retornada com sucesso",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "500": {
            "description": "Erro ao ler os bytes da foto",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/employee/active": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para buscar os funcionários ativos",
        "description": "Retorna todos os funcionários que estão com contrato ativo.",
        "operationId": "getAllActiveEmployees",
        "responses": {
          "200": {
            "description": "Lista de funcionários ativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/EmployeeDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/employee/{employeeId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para buscar contratos por funcionário",
        "operationId": "getContractsByEmployee",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/company/{companyId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Endpoint para buscar contratos por empresa",
        "operationId": "getContractsByCompany",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clock_in/search": {
      "get": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para obter todas as movimentações ou pesquisar com filtros",
        "description": "Este endpoint retorna uma lista paginada de movimentações com base em filtros opcionais como nome do funcionário, empresa, função, intervalo de datas e carga horária. Também permite exportar os dados completos.",
        "operationId": "searchClockIns",
        "parameters": [
          {
            "name": "employee",
            "in": "query",
            "required": false,
            "description": "Nome do funcionário",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "description": "Nome da empresa",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "description": "Nome da função",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "Data e hora de início (formato yyyy-MM-dd HH:mm:ss)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "Data e hora de término (formato yyyy-MM-dd HH:mm:ss)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_hours",
            "in": "query",
            "required": false,
            "description": "Carga horária mínima",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "max_hours",
            "in": "query",
            "required": false,
            "description": "Carga horária máxima",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Número da página (padrão: 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Tamanho da página (padrão: 10)",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "description": "Se verdadeiro, exporta os dados completos sem paginação",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de movimentações retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ClockInResponseDTO"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClockInResponseDTO"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos ou formato de data incorreto"
          }
        }
      }
    },
    "/analytics": {
      "get": {
        "tags": [
          "analytics-controller"
        ],
        "summary": "Endpoint para obter dados analíticos de uma empresa em um intervalo de datas",
        "description": "Este endpoint retorna dados analíticos consolidados para uma empresa específica com base em um intervalo de datas. Os dados podem incluir métricas de presença, registros de ponto e outras informações relacionadas à atividade dos funcionários.",
        "operationId": "getAnalytics",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": true,
            "description": "ID da empresa para a qual os dados analíticos serão gerados",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "description": "Data de início do período (formato yyyy-MM-dd)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "description": "Data de término do período (formato yyyy-MM-dd)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados analíticos retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsDTO"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos ou mal formatados"
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        }
      }
    },
    "/photos/delete/employee/{employeeId}": {
      "delete": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Endpoint para deletar a foto de um funcionário pelo ID",
        "operationId": "deletePhoto",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto deletada com sucesso",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmployeeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "register_number": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string"
          },
          "blood_type": {
            "type": "string"
          }
        }
      },
      "ContractRequestDTO": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ContractResponseDTO": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "CompanyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "trade_name": {
            "type": "string"
          }
        }
      },
      "ClockInRequestDTO": {
        "type": "object",
        "properties": {
          "date_time_in": {
            "type": "string"
          },
          "date_time_out": {
            "type": "string"
          },
          "employee": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ClockInResponseDTO": {
        "type": "object",
        "properties": {
          "date_time_in": {
            "type": "string"
          },
          "date_time_out": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeResponseDTO"
          },
          "worked_hours": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EmployeeResponseDTO": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date-time"
          },
          "tipoSanguineo": {
            "type": "string"
          },
          "sexo": {
            "type": "string"
          },
          "registerNumber": {
            "type": "string"
          },
          "id_funcionario": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AnalyticsDTO": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "integer",
            "format": "int64"
          },
          "company_name": {
            "type": "string"
          },
          "daily_registers": {
            "$ref": "#/components/schemas/DailyRegisters"
          },
          "hours_worked_by_role": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleHours"
            }
          },
          "employee_count": {
            "$ref": "#/components/schemas/EmployeeCount"
          },
          "expiring_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiringContract"
            }
          },
          "incomplete_clock_ins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncompleteClockIn"
            }
          },
          "employees_by_period": {
            "$ref": "#/components/schemas/EmployeesByShift"
          }
        }
      },
      "DailyRegisters": {
        "type": "object",
        "properties": {
          "clock_in_with_in_count": {
            "type": "integer",
            "format": "int32"
          },
          "clock_in_with_out_count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeCount": {
        "type": "object",
        "properties": {
          "male_workers": {
            "type": "integer",
            "format": "int32"
          },
          "female_workers": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeesByShift": {
        "type": "object",
        "properties": {
          "midnight_to_morning": {
            "type": "integer",
            "format": "int32"
          },
          "morning_to_afternoon": {
            "type": "integer",
            "format": "int32"
          },
          "afternoon_to_night": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExpiringContract": {
        "type": "object",
        "properties": {
          "contract_id": {
            "type": "integer",
            "format": "int64"
          },
          "register_number": {
            "type": "string"
          },
          "employee_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "IncompleteClockIn": {
        "type": "object",
        "properties": {
          "clock_in_id": {
            "type": "integer",
            "format": "int64"
          },
          "register_number": {
            "type": "string"
          },
          "employee_name": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "date_time_in": {
            "type": "string",
            "format": "date-time"
          },
          "date_time_out": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RoleHours": {
        "type": "object",
        "properties": {
          "role_name": {
            "type": "string"
          },
          "total_hours": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}