{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8081/api",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Companies",
      "description": "APIs para gerenciamento de empresas"
    },
    {
      "name": "Roles",
      "description": "APIs para gerenciamento de funções"
    },
    {
      "name": "Clock ins",
      "description": "APIs para gerenciamento de movimentações"
    },
    {
      "name": "Contracts",
      "description": "Endpoints para gerenciamento de contratos"
    },
    {
      "name": "Employees",
      "description": "APIs para gerenciamento de funcionários"
    }
  ],
  "paths": {
    "/employee/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para buscar funcionário pelo ID",
        "description": "Este endpoint faz uma filtragem e lista os funcionários atráves do ID",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para atualizar funcionario existente",
        "description": "Este endpoint atualiza os dados de um funcionário cadastrado através de seu ID",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}": {
      "put": {
        "tags": [
          "Contracts"
        ],
        "operationId": "updateContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts"
        ],
        "operationId": "deleteContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/company/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para buscar empresa pelo ID",
        "description": "Este endpoint faz uma filtragem e lista as empresas atráves do ID",
        "operationId": "getCompanyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para atualizar empresa existente",
        "description": "Este endpoint atualiza os dados de uma empresa cadastrada através de seu ID",
        "operationId": "updateCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para deletar empresa",
        "description": "Este endpoint deleta todos os dados de uma empresa cadastrada",
        "operationId": "deleteCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/clock_in/{id}": {
      "get": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para buscar uma movimentação pelo ID",
        "operationId": "getMovimentacaoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para atualizar uma movimentação",
        "operationId": "updateMovimentacao",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClockInRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para excluir uma movimentação",
        "operationId": "deleteMovimentacao",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Endpoint para buscar todos as funções",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Endpoint para criar função",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/photos/upload": {
      "post": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Upload de foto do funcionário",
        "operationId": "uploadPhoto",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Erro ao salvar a foto",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Foto salva com sucesso",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/employee": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para buscar todos os funcionários",
        "description": "Este endpoint lista todos os funcionários cadastrados no sistema através do ID",
        "operationId": "listarFuncionarios",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Endpoint para criar funcionário",
        "description": "Este endpoint cria um novo registro de funcionário através dos dados fornecidos. Os campos incluem ID, nome, número de registro, data de nascimento, gênero e tipo sanguíneo",
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDTO"
              }
            }
          }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "operationId": "createContract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/company": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para listar todas as empresas",
        "description": "Este endpoint lista todos as empresas cadastradas no sistema através do ID",
        "operationId": "getAllCompanies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Endpoint para criar nova empresa",
        "description": "Este endpoint cria um novo registro de empresa através dos dados fornecidos. Os campos incluem ID, nome, CNPJ e nome social",
        "operationId": "createCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/clock_in": {
      "post": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para criar uma nova movimentação",
        "operationId": "createMovimentacao",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClockInRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClockInResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/photos/file/employee/{employeeId}": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Serve a imagem como Resource pelo ID do funcionário(Para WEB)",
        "operationId": "servePhotoAsResource",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Imagem retornada como Resource",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Erro ao carregar o arquivo",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/photos/bytes/employee/{employeeId}": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Retorna a imagem como array de bytes pelo ID do funcionário(Para Mobile e consumo de API)",
        "operationId": "servePhotoBytes",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              },
              "image/png": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Imagem retornada com sucesso",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              },
              "image/png": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao ler os bytes da foto",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              },
              "image/png": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/employee/{employeeId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "operationId": "getContractsByEmployee",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/company/{companyId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "operationId": "getContractsByCompany",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clock_in/search": {
      "get": {
        "tags": [
          "Clock ins"
        ],
        "summary": "Endpoint para obter todas as movimentações ou pesquisar com filtros",
        "operationId": "searchMovimentacoes",
        "parameters": [
          {
            "name": "employee",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/photos/delete/employee/{employeeId}": {
      "delete": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Deleta a foto do funcionário pelo ID",
        "operationId": "deletePhoto",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto deletada com sucesso",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Foto não encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
"components": {
    "schemas": {
      "EmployeeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "register_number": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string"
          },
          "blood_type": {
            "type": "string"
          }
        }
      },
      "ContractRequestDTO": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ContractResponseDTO": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "CompanyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "trade_name": {
            "type": "string"
          }
        }
      },
      "ClockInRequestDTO": {
        "type": "object",
        "properties": {
          "date_time": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "employee": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ClockInResponseDTO": {
        "type": "object",
        "properties": {
          "date_time": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeResponseDTO"
          }
        }
      },
      "EmployeeResponseDTO": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date-time"
          },
          "tipoSanguineo": {
            "type": "string"
          },
          "sexo": {
            "type": "string"
          },
          "id_funcionario": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
